name: Rust
on:
  release:
    types: [ published ]
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose --release
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Package release
      id: package
      run: |
        mkdir cfn-guard-v2-${{ matrix.os }}
        cp ./target/release/cfn-guard ./cfn-guard-v2-${{ matrix.os }}/
        test -e ./target/release/*.so && cp ./target/release/*.so ./cfn-guard-v2-${{ matrix.os }}/
        test -e ./target/release/*.dylib && cp ./target/release/*.dylib ./cfn-guard-v2-${{ matrix.os }}/
        cp README.md ./cfn-guard-v2-${{ matrix.os }}/
        tar czvf ./cfn-guard-v2-${{ matrix.os }}.tar.gz ./cfn-guard-v2-${{ matrix.os }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./cfn-guard-v2-${{ matrix.os }}.tar.gz 
        asset_name: cfn-guard-v2-${{ matrix.os }}.tar.gz
        asset_content_type: application/octet-stream

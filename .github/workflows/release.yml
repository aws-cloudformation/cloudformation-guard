name: Release
on:
  release:
    types: [published]
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose --release
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Package release
        id: package
        uses: knicknic/os-specific-run@v1.0.3
        with:
          macos: |
            rustup target add x86_64-apple-darwin
            cargo build --release --target x86_64-apple-darwin
            mkdir cfn-guard-v3-x86_64-${{ matrix.os }}
            cp ./target/x86_64-apple-darwin/release/cfn-guard ./cfn-guard-v3-x86_64-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-x86_64-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-x86_64-${{ matrix.os }}.tar.gz ./cfn-guard-v3-x86_64-${{ matrix.os }}
            mkdir cfn-guard-v3-${{ matrix.os }}
            cp ./target/x86_64-apple-darwin/release/cfn-guard ./cfn-guard-v3-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-${{ matrix.os }}.tar.gz ./cfn-guard-v3-${{ matrix.os }}

            rustup target add aarch64-apple-darwin
            cargo build --release --target aarch64-apple-darwin
            mkdir cfn-guard-v3-aarch64-${{ matrix.os }}
            cp ./target/aarch64-apple-darwin/release/cfn-guard ./cfn-guard-v3-aarch64-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-aarch64-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-aarch64-${{ matrix.os }}.tar.gz ./cfn-guard-v3-aarch64-${{ matrix.os }}
          linux: |
            rustup target add x86_64-unknown-linux-musl
            cargo build --release --target x86_64-unknown-linux-musl
            mkdir cfn-guard-v3-x86_64-${{ matrix.os }}
            cp ./target/x86_64-unknown-linux-musl/release/cfn-guard ./cfn-guard-v3-x86_64-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-x86_64-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-x86_64-${{ matrix.os }}.tar.gz ./cfn-guard-v3-x86_64-${{ matrix.os }}
            mkdir cfn-guard-v3-${{ matrix.os }}
            cp ./target/x86_64-unknown-linux-musl/release/cfn-guard ./cfn-guard-v3-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-${{ matrix.os }}.tar.gz ./cfn-guard-v3-${{ matrix.os }}

            sudo apt update
            sudo apt install gcc-aarch64-linux-gnu
            export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=aarch64-linux-gnu-gcc
            rustup target add aarch64-unknown-linux-musl
            cargo build --release --target aarch64-unknown-linux-musl
            mkdir cfn-guard-v3-aarch64-${{ matrix.os }}
            cp ./target/aarch64-unknown-linux-musl/release/cfn-guard ./cfn-guard-v3-aarch64-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-aarch64-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-aarch64-${{ matrix.os }}.tar.gz ./cfn-guard-v3-aarch64-${{ matrix.os }}
          windows: |
            rustup target add x86_64-pc-windows-msvc
            cargo build --release --target x86_64-pc-windows-msvc
            mkdir cfn-guard-v3-x86_64-${{ matrix.os }}
            cp ./target/x86_64-pc-windows-msvc/release/cfn-guard.exe ./cfn-guard-v3-x86_64-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-x86_64-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-x86_64-${{ matrix.os }}.tar.gz ./cfn-guard-v3-x86_64-${{ matrix.os }}
            mkdir cfn-guard-v3-${{ matrix.os }}
            cp ./target/x86_64-pc-windows-msvc/release/cfn-guard.exe ./cfn-guard-v3-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-${{ matrix.os }}.tar.gz ./cfn-guard-v3-${{ matrix.os }}

            rustup target add i686-pc-windows-msvc
            cargo build --release --target i686-pc-windows-msvc
            mkdir cfn-guard-v3-i686-${{ matrix.os }}
            cp ./target/i686-pc-windows-msvc/release/cfn-guard.exe ./cfn-guard-v3-i686-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-i686-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-i686-${{ matrix.os }}.tar.gz ./cfn-guard-v3-i686-${{ matrix.os }}

            rustup target add aarch64-pc-windows-msvc
            cargo build --release --target aarch64-pc-windows-msvc
            mkdir cfn-guard-v3-aarch64-${{ matrix.os }}
            cp ./target/i686-pc-windows-msvc/release/cfn-guard.exe ./cfn-guard-v3-aarch64-${{ matrix.os }}/
            cp README.md ./cfn-guard-v3-aarch64-${{ matrix.os }}/
            tar czvf ./cfn-guard-v3-aarch64-${{ matrix.os }}.tar.gz ./cfn-guard-v3-aarch64-${{ matrix.os }}
      - name: Upload x86 Release Asset
        id: upload-x86_64-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./cfn-guard-v3-x86_64-${{ matrix.os }}.tar.gz
          asset_name: cfn-guard-v3-x86_64-${{ matrix.os }}.tar.gz
          asset_content_type: application/octet-stream
      - name: Upload arm64 Release Asset
        id: upload-aarch64-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./cfn-guard-v3-aarch64-${{ matrix.os }}.tar.gz
          asset_name: cfn-guard-v3-aarch64-${{ matrix.os }}.tar.gz
          asset_content_type: application/octet-stream
      - name: Upload i686 Release Asset
        id: upload-i686-release-asset
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./cfn-guard-v3-i686-${{ matrix.os }}.tar.gz
          asset_name: cfn-guard-v3-i686-${{ matrix.os }}.tar.gz
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Legacy)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./cfn-guard-v3-${{ matrix.os }}.tar.gz
          asset_name: cfn-guard-v3-${{ matrix.os }}.tar.gz
          asset_content_type: application/octet-stream

STDIN Status = FAIL
FAILED rules
s3_bucket_public_read_prohibited.guard/S3_BUCKET_PUBLIC_READ_PROHIBITED    FAIL
---
Clause Failure Summary
s3_bucket_public_read_prohibited.guard/S3_BUCKET_PUBLIC_READ_PROHIBITED    Clause #1           FAIL( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration EXISTS  )
                                                                                              Comparing Map((Path("", Location { line: 4, col: 0 }), MapValue { keys: [String((Path("", Location { line: 4, col: 0 }), "Resources"))], values: {"Resources": Map((Path("/Resources", Location { line: 5, col: 2 }), MapValue { keys: [String((Path("/Resources", Location { line: 5, col: 2 }), "MyBucket"))], values: {"MyBucket": Map((Path("/Resources/MyBucket", Location { line: 6, col: 4 }), MapValue { keys: [String((Path("/Resources/MyBucket", Location { line: 6, col: 4 }), "Type")), String((Path("/Resources/MyBucket", Location { line: 7, col: 4 }), "Properties"))], values: {"Type": String((Path("/Resources/MyBucket/Type", Location { line: 6, col: 10 }), "AWS::S3::Bucket")), "Properties": Map((Path("/Resources/MyBucket/Properties", Location { line: 13, col: 6 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties", Location { line: 13, col: 6 }), "BucketEncryption")), String((Path("/Resources/MyBucket/Properties", Location { line: 17, col: 6 }), "VersioningConfiguration"))], values: {"BucketEncryption": Map((Path("/Resources/MyBucket/Properties/BucketEncryption", Location { line: 14, col: 8 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption", Location { line: 14, col: 8 }), "ServerSideEncryptionConfiguration"))], values: {"ServerSideEncryptionConfiguration": List((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration", Location { line: 15, col: 10 }), [Map((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0", Location { line: 15, col: 12 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0", Location { line: 15, col: 12 }), "ServerSideEncryptionByDefault"))], values: {"ServerSideEncryptionByDefault": Map((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault", Location { line: 16, col: 14 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault", Location { line: 16, col: 14 }), "SSEAlgorithm"))], values: {"SSEAlgorithm": String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault/SSEAlgorithm", Location { line: 16, col: 28 }), "AES256"))} }))} }))]))} })), "VersioningConfiguration": Map((Path("/Resources/MyBucket/Properties/VersioningConfiguration", Location { line: 18, col: 8 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/VersioningConfiguration", Location { line: 18, col: 8 }), "Status"))], values: {"Status": String((Path("/Resources/MyBucket/Properties/VersioningConfiguration/Status", Location { line: 18, col: 16 }), "Enabled"))} }))} }))} }))} }))} }))
                                                                                              (DEFAULT: NO_MESSAGE)
                                                                          Clause #2           FAIL( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration.BlockPublicAcls EQUALS  true)

                                                                                              Attempting to retrieve array index or key from map at path = /Resources/MyBucket/Properties[L:13,C:6] , Type was not an array/object map, Remaining Query = PublicAccessBlockConfiguration.BlockPublicAcls
                                                                          Clause #3           FAIL( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration.BlockPublicPolicy EQUALS  true)

                                                                                              Attempting to retrieve array index or key from map at path = /Resources/MyBucket/Properties[L:13,C:6] , Type was not an array/object map, Remaining Query = PublicAccessBlockConfiguration.BlockPublicPolicy
                                                                          Clause #4           FAIL( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration.IgnorePublicAcls EQUALS  true)

                                                                                              Attempting to retrieve array index or key from map at path = /Resources/MyBucket/Properties[L:13,C:6] , Type was not an array/object map, Remaining Query = PublicAccessBlockConfiguration.IgnorePublicAcls
                                                                          Clause #5           FAIL( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets EQUALS  true)

                                                                                              Attempting to retrieve array index or key from map at path = /Resources/MyBucket/Properties[L:13,C:6] , Type was not an array/object map, Remaining Query = PublicAccessBlockConfiguration.RestrictPublicBuckets
Evaluation Tree
Rule(S3_BUCKET_PUBLIC_READ_PROHIBITED, FAIL)
    |  Message: DEFAULT MESSAGE(FAIL)
    Condition(S3_BUCKET_PUBLIC_READ_PROHIBITED, PASS)
        |  Message: DEFAULT MESSAGE(PASS)
        Clause( %s3_bucket_public_read_prohibited not EMPTY  , PASS)
            |  From: Map((Path("/Resources/MyBucket", Location { line: 6, col: 4 }), MapValue { keys: [String((Path("/Resources/MyBucket", Location { line: 6, col: 4 }), "Type")), String((Path("/Resources/MyBucket", Location { line: 7, col: 4 }), "Properties"))], values: {"Type": String((Path("/Resources/MyBucket/Type", Location { line: 6, col: 10 }), "AWS::S3::Bucket")), "Properties": Map((Path("/Resources/MyBucket/Properties", Location { line: 13, col: 6 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties", Location { line: 13, col: 6 }), "BucketEncryption")), String((Path("/Resources/MyBucket/Properties", Location { line: 17, col: 6 }), "VersioningConfiguration"))], values: {"BucketEncryption": Map((Path("/Resources/MyBucket/Properties/BucketEncryption", Location { line: 14, col: 8 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption", Location { line: 14, col: 8 }), "ServerSideEncryptionConfiguration"))], values: {"ServerSideEncryptionConfiguration": List((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration", Location { line: 15, col: 10 }), [Map((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0", Location { line: 15, col: 12 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0", Location { line: 15, col: 12 }), "ServerSideEncryptionByDefault"))], values: {"ServerSideEncryptionByDefault": Map((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault", Location { line: 16, col: 14 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault", Location { line: 16, col: 14 }), "SSEAlgorithm"))], values: {"SSEAlgorithm": String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault/SSEAlgorithm", Location { line: 16, col: 28 }), "AES256"))} }))} }))]))} })), "VersioningConfiguration": Map((Path("/Resources/MyBucket/Properties/VersioningConfiguration", Location { line: 18, col: 8 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/VersioningConfiguration", Location { line: 18, col: 8 }), "Status"))], values: {"Status": String((Path("/Resources/MyBucket/Properties/VersioningConfiguration/Status", Location { line: 18, col: 16 }), "Enabled"))} }))} }))} }))
            |  Message: DEFAULT MESSAGE(PASS)
    Clause( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration EXISTS  , FAIL)
        |  From: Map((Path("", Location { line: 4, col: 0 }), MapValue { keys: [String((Path("", Location { line: 4, col: 0 }), "Resources"))], values: {"Resources": Map((Path("/Resources", Location { line: 5, col: 2 }), MapValue { keys: [String((Path("/Resources", Location { line: 5, col: 2 }), "MyBucket"))], values: {"MyBucket": Map((Path("/Resources/MyBucket", Location { line: 6, col: 4 }), MapValue { keys: [String((Path("/Resources/MyBucket", Location { line: 6, col: 4 }), "Type")), String((Path("/Resources/MyBucket", Location { line: 7, col: 4 }), "Properties"))], values: {"Type": String((Path("/Resources/MyBucket/Type", Location { line: 6, col: 10 }), "AWS::S3::Bucket")), "Properties": Map((Path("/Resources/MyBucket/Properties", Location { line: 13, col: 6 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties", Location { line: 13, col: 6 }), "BucketEncryption")), String((Path("/Resources/MyBucket/Properties", Location { line: 17, col: 6 }), "VersioningConfiguration"))], values: {"BucketEncryption": Map((Path("/Resources/MyBucket/Properties/BucketEncryption", Location { line: 14, col: 8 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption", Location { line: 14, col: 8 }), "ServerSideEncryptionConfiguration"))], values: {"ServerSideEncryptionConfiguration": List((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration", Location { line: 15, col: 10 }), [Map((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0", Location { line: 15, col: 12 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0", Location { line: 15, col: 12 }), "ServerSideEncryptionByDefault"))], values: {"ServerSideEncryptionByDefault": Map((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault", Location { line: 16, col: 14 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault", Location { line: 16, col: 14 }), "SSEAlgorithm"))], values: {"SSEAlgorithm": String((Path("/Resources/MyBucket/Properties/BucketEncryption/ServerSideEncryptionConfiguration/0/ServerSideEncryptionByDefault/SSEAlgorithm", Location { line: 16, col: 28 }), "AES256"))} }))} }))]))} })), "VersioningConfiguration": Map((Path("/Resources/MyBucket/Properties/VersioningConfiguration", Location { line: 18, col: 8 }), MapValue { keys: [String((Path("/Resources/MyBucket/Properties/VersioningConfiguration", Location { line: 18, col: 8 }), "Status"))], values: {"Status": String((Path("/Resources/MyBucket/Properties/VersioningConfiguration/Status", Location { line: 18, col: 16 }), "Enabled"))} }))} }))} }))} }))} }))
        |  Message: (DEFAULT: NO_MESSAGE)
    Clause( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration.BlockPublicAcls EQUALS  true, FAIL)
        |  Message: Attempting to retrieve array index or key from map at path = /Resources/MyBucket/Properties[L:13,C:6] , Type was not an array/object map, Remaining Query = PublicAccessBlockConfiguration.BlockPublicAcls
    Clause( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration.BlockPublicPolicy EQUALS  true, FAIL)
        |  Message: Attempting to retrieve array index or key from map at path = /Resources/MyBucket/Properties[L:13,C:6] , Type was not an array/object map, Remaining Query = PublicAccessBlockConfiguration.BlockPublicPolicy
    Clause( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration.IgnorePublicAcls EQUALS  true, FAIL)
        |  Message: Attempting to retrieve array index or key from map at path = /Resources/MyBucket/Properties[L:13,C:6] , Type was not an array/object map, Remaining Query = PublicAccessBlockConfiguration.IgnorePublicAcls
    Clause( %s3_bucket_public_read_prohibited[*].Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets EQUALS  true, FAIL)
        |  Message: Attempting to retrieve array index or key from map at path = /Resources/MyBucket/Properties[L:13,C:6] , Type was not an array/object map, Remaining Query = PublicAccessBlockConfiguration.RestrictPublicBuckets
